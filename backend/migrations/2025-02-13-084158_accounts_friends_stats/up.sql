CREATE TABLE accounts (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(32) UNIQUE NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  premium BOOLEAN NOT NULL DEFAULT FALSE,
  suspended BOOLEAN NOT NULL DEFAULT FALSE
);


CREATE TABLE account_stats (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  account_id INT UNIQUE NOT NULL,
  first_log DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  last_log DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  games_played BIGINT NOT NULL DEFAULT 0,
  games_won BIGINT NOT NULL DEFAULT 0,
  wallet BIGINT NOT NULL DEFAULT 0,
  experience BIGINT NOT NULL DEFAULT 0,
  level INT NOT NULL DEFAULT 0,
  season_rank INT NOT NULL DEFAULT 0,
  best_rank INT NOT NULL DEFAULT 0,
  FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
);


CREATE TABLE friends (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  account1 INT NOT NULL,
  account2 INT NOT NULL,
  FOREIGN KEY (account1) REFERENCES accounts(id) ON DELETE CASCADE,
  FOREIGN KEY (account2) REFERENCES accounts(id) ON DELETE CASCADE,
  status INT NOT NULL DEFAULT 0
);


CREATE TABLE cosmetics (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  price INT NOT NULL DEFAULT 1,
  type ENUM('other') NOT NULL DEFAULT 'other'
);


CREATE TABLE collection_cosmetics (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  account_id INT NOT NULL,
  cosmetic_id INT NOT NULL,
  FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
  FOREIGN KEY (cosmetic_id) REFERENCES cosmetics(id) ON DELETE CASCADE
);


CREATE TABLE cards (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  element ENUM('fire', 'water', 'wind', 'earth') NOT NULL,
  type ENUM('weapon', 'spell', 'food') NOT NULL,
  stars INT NOT NULL DEFAULT 1,
  disabled BOOL NOT NULL DEFAULT FALSE
);


CREATE TABLE collection_cards (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  account_id INT NOT NULL,
  card_id INT NOT NULL,
  FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
  FOREIGN KEY (card_id) REFERENCES cards(id) ON DELETE CASCADE
);
