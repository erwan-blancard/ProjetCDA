name: CI

on:
  push:
    branches: [ gameserveur, test_logic_game, theo_front, main ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies (frontend)
        working-directory: frontend
        run: npm ci
      - name: Build (frontend)
        working-directory: frontend
        run: npm run build

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable
      - name: Build (backend)
        working-directory: backend
        run: cargo build --release

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies (frontend)
        working-directory: frontend
        run: npm ci
      - name: Run frontend tests
        working-directory: frontend
        run: npm test

  test-backend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable
      - name: Run backend tests
        working-directory: backend
        run: cargo test

  deploy:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push images
        run: |
          docker build -t ghcr.io/${{ github.repository }}/frontend:latest -f frontend/Dockerfile frontend
          docker push ghcr.io/${{ github.repository }}/frontend:latest
          docker build -t ghcr.io/${{ github.repository }}/backend:latest -f backend/Dockerfile backend
          docker push ghcr.io/${{ github.repository }}/backend:latest
      - name: Deploy to DigitalOcean App Platform
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Update DigitalOcean App
        run: doctl apps update ${{ secrets.DO_APP_ID }} --spec .do/app.yaml